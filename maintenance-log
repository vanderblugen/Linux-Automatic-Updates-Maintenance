#!/bin/bash
PATH=/bin:/usr/bin

# should this script log/email output.
EMAIL=false

# include extra information in the log/email
SHOWFINGER=false
SHOWWHO=false
SHOWUSERS=false
SHOWFREESPACE=false
SHOWMOUNT=false
SHOWSWAPON=false

# which user is using magic mirror
MIRROR="mirror"

# outupt a random character filename
THISFILENAME="$(openssl rand -hex 8).txt"

# install ts if not installed
if [ ! -f "/usr/bin/ts" ]; then
    sudo apt-get install moreutils -y
fi

#date >> $THISFILENAME

echo "[Running Update]" 2>&1 | ts | tee -a $THISFILENAME
apt-get update -y 2>&1 | ts | tee -a $THISFILENAME

# if snap exists run the if
if test -f "/usr/bin/snap"; then
    echo "[Snap Refresh]" 2>&1 | ts | tee -a $THISFILENAME
    /usr/bin/snap refresh
fi

# if flatpak exists run the if
if test -f "/usr/bin/flatpak"; then
    echo "[Flatpak Update]" 2>&1 | ts | tee -a $THISFILENAME
    /usr/bin/flatpak update
fi

# if mirror user exists
if grep "$MIRROR" /etc/passwd >/dev/null 2>&1; then

    # look for where mmpm is at
    MMPM=$(su -l $MIRROR -c 'which mmpm')

    # if mmpm exists run the if
    if test -f "$MMPM"; then
        echo "[Refresh Mirror DB]" 2>&1 | ts | tee -a $THISFILENAME
        yes | su -l $MIRROR -c 'mmpm db --refresh' 2>&1 | ts | tee -a $THISFILENAME

        echo "[Magic Mirror Update]" 2>&1 | ts | tee -a $THISFILENAME
        yes | su -l $MIRROR -c 'mmpm update' 2>&1 | ts | tee -a $THISFILENAME

        echo "[Magic Mirror Upgrade]" 2>&1 | ts | tee -a $THISFILENAME
        yes | su -l $MIRROR -c 'mmpm upgrade' 2>&1 | ts | tee -a $THISFILENAME
        
        echo "[More Magic Mirror Upgrade(s)]" 2>&1 | ts | tee -a $THISFILENAME
        yes | su -l $MIRROR -c 'pip3 install --user --upgrade mmpm' 2>&1 | ts | tee -a $THISFILENAME
    fi
fi

echo "[Running Upgrade]" 2>&1 | ts | tee -a $THISFILENAME
apt-get upgrade -y 2>&1 | ts | tee -a $THISFILENAME

echo "[Running Dist-Upgrade]" 2>&1 | ts | tee -a $THISFILENAME
apt-get dist-upgrade -y 2>&1 | ts | tee -a $THISFILENAME

echo "[Running Autoremove]" 2>&1 | ts | tee -a $THISFILENAME
apt-get autoremove -y 2>&1 | ts | tee -a $THISFILENAME

echo "[Running Autoclean]" 2>&1 | ts | tee -a $THISFILENAME
apt-get autoclean -y 2>&1 | ts | tee -a $THISFILENAME

if "$SHOWFINGER"; then

    # install finger if not installed
    if [ ! -f "/usr/bin/finger" ]; then
        sudo apt-get install finger -y
    fi

    echo "[finger]" 2>&1 | ts | tee -a $THISFILENAME
    sudo finger 2>&1 | ts | tee -a $THISFILENAME
fi

if "$SHOWWHO"; then
    echo "[Who is Logged In and What They are Doing]" 2>&1 | ts | tee -a $THISFILENAME
    sudo w 2>&1 | ts | tee -a $THISFILENAME
fi

if "$SHOWUSERS"; then
    echo "[Users Currently Logged In]" 2>&1 | ts | tee -a $THISFILENAME
    sudo users 2>&1 | ts | tee -a $THISFILENAME
fi

if "$SHOWFREESPACE"; then
    echo "[Showing Free Space Information]" 2>&1 | ts | tee -a $THISFILENAME
    sudo df 2>&1 | ts | tee -a $THISFILENAME
fi

if "$SHOWMOUNT"; then
    echo "[Drive Mount Information]" 2>&1 | ts | tee -a $THISFILENAME
    sudo mount 2>&1 | ts | tee -a $THISFILENAME
fi

if "$SHOWSWAPON"; then
    echo "[Swapfile Summary]" 2>&1 | ts | tee -a $THISFILENAME
    sudo swapon -s 2>&1 | ts | tee -a $THISFILENAME
fi

# install shred if not installed
if [ ! -f "/usr/bin/shred" ]; then
    apt-get install shred -y
fi

echo "[Rebooting]" 2>&1 | ts | tee -a $THISFILENAME

# if email is set to 1 then email otherwise do not
if "$EMAIL"; then
    cat $THISFILENAME | gpg -ear "<address1@mail.com>" | mail -a "Subject: Regular Maintenance" -a "X-Custom-Header: yes" "address2@mail.com"
else
    cat $THISFILENAME >> /var/log/maintenance.log
    chmod 644 /var/log/maintenance.log
fi

shred -uvz  $THISFILENAME

sudo reboot now

exit 0
